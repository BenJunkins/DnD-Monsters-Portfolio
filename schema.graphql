"""
Indicates exactly one field must be supplied and this field must not be `null`.
"""
directive @oneOf on INPUT_OBJECT

query Monsters {

}

type Query {
    """Gets all monsters, optionally filtered and sorted."""
  monsters(
    """Number of results to skip for pagination. Default: 0."""
    skip: Int

    """
    Maximum number of results to return for pagination. Default: 50, Max: 100.
    """
    limit: Int

    """Filter by name (case-insensitive, partial match)."""
    name: String

    """Filter by monster type (case-insensitive, exact match, e.g., "beast")"""
    type: String

    """
    Filter by monster subtype (case-insensitive, exact match, e.g., "goblinoid")
    """
    subtype: String

    """Filter by challenge rating"""
    challenge_rating: NumberFilterInput

    """Filter by monster size (exact match, e.g., "Medium")"""
    size: String

    """Filter by monster XP"""
    xp: NumberFilterInput

    """Filter by strength score"""
    strength: NumberFilterInput

    """Filter by dexterity score"""
    dexterity: NumberFilterInput

    """Filter by constitution score"""
    constitution: NumberFilterInput

    """Filter by intelligence score"""
    intelligence: NumberFilterInput

    """Filter by wisdom score"""
    wisdom: NumberFilterInput

    """Filter by charisma score"""
    charisma: NumberFilterInput

    """Filter by damage vulnerability indices"""
    damage_vulnerabilities: [String!]

    """Filter by damage resistance indices"""
    damage_resistances: [String!]

    """Filter by damage immunity indices"""
    damage_immunities: [String!]

    """Filter by condition immunity indices"""
    condition_immunities: [String!]

    """Specify sorting order for monsters."""
    order: MonsterOrder
  ): [Monster!]!

  """Gets a single monster by its index."""
  monster(index: String!): Monster
}

"""A D&D monster."""
type Monster {
  """The actions for the monster."""
  actions: [MonsterAction!]
  alignment: String!
  challenge_rating: Float!
  charisma: Int!

  """Conditions the monster is immune to."""
  condition_immunities: [Condition!]
  constitution: Int!
  damage_immunities: [String!]!
  damage_resistances: [String!]!
  damage_vulnerabilities: [String!]!
  dexterity: Int!

  """Other forms the monster can assume."""
  forms: [Monster!]
  hit_dice: String!
  hit_points: Int!
  hit_points_roll: String!
  image: String
  index: String!
  intelligence: Int!
  languages: String!

  """The legendary actions for the monster."""
  legendary_actions: [LegendaryAction!]
  name: String!

  """The proficiencies for the monster."""
  proficiencies: [MonsterProficiency!]

  """The reactions for the monster."""
  reactions: [Reaction!]
  senses: Sense!
  size: String!

  """The special abilities for the monster."""
  special_abilities: [SpecialAbility!]
  speed: MonsterSpeed!
  strength: Int!
  subtype: String
  type: String!
  wisdom: Int!
  xp: Int!
  updated_at: String!
  armor_class: [MonsterArmorClass!]!
}

"""An action a monster can perform"""
type MonsterAction {
  """The name of the action."""
  name: String!

  """The description of the action."""
  desc: String!

  """The attack bonus for the action."""
  attack_bonus: Int

  """The difficulty class for the action."""
  dc: DifficultyClass

  """The usage for the action."""
  usage: ActionUsage

  """The type of multiattack for the action."""
  multiattack_type: String

  """The actions for the action."""
  actions: [ActionOption!]
  damage: [DamageOrDamageChoice!]
  action_options: ActionChoice
  options: BreathChoice
}

"""
Represents a Difficulty Class (DC) for saving throws or ability checks where a value is expected.
"""
type DifficultyClass {
  """The ability score associated with this DC."""
  dc_type: AbilityScore!

  """The value of the DC."""
  dc_value: Int!

  """The result of a successful save against this DC."""
  success_type: String!
}

"""
An ability score representing a fundamental character attribute (e.g., Strength, Dexterity).
"""
type AbilityScore {
  """A description of the ability score and its applications."""
  desc: [String!]!

  """The full name of the ability score (e.g., Strength)."""
  full_name: String!

  """The unique identifier for this ability score (e.g., str)."""
  index: String!

  """The abbreviated name of the ability score (e.g., STR)."""
  name: String!

  """Skills associated with this ability score."""
  skills: [Skill!]!

  """Timestamp of the last update."""
  updated_at: String!
}

"""
A skill representing proficiency in a specific task (e.g., Athletics, Stealth).
"""
type Skill {
  """The ability score associated with this skill."""
  ability_score: AbilityScore!

  """A description of the skill."""
  desc: [String!]!

  """The unique identifier for this skill (e.g., athletics)."""
  index: String!

  """The name of the skill (e.g., Athletics)."""
  name: String!

  """Timestamp of the last update."""
  updated_at: String!
}

"""Usage details for a monster action or ability"""
type ActionUsage {
  """The type of action usage."""
  type: String!

  """The dice roll for the action usage."""
  dice: String

  """The minimum value for the action usage."""
  min_value: Int
}

"""Option within a monster action"""
type ActionOption {
  """The name of the action."""
  action_name: String!

  """Number of times the action can be used."""
  count: String!

  """The type of action."""
  type: String!
}

union DamageOrDamageChoice = Damage | DamageChoice

"""A choice of damage options"""
type DamageChoice {
  """The number of options to choose."""
  choose: Float!

  """The type of choice."""
  type: String!

  """The options to choose from."""
  from: DamageChoiceOptionSet!

  """The description of the choice."""
  desc: String
}

"""A set of damage options"""
type DamageChoiceOptionSet {
  """The type of option set."""
  option_set_type: String!

  """The options in this set."""
  options: [DamageChoiceOption!]!
}

"""A single damage option in a damage choice"""
type DamageChoiceOption {
  """The type of option."""
  option_type: String!

  """The damage for this option."""
  damage: Damage!
}

"""A choice of actions for a monster"""
type ActionChoice {
  """Number of actions to choose."""
  choose: Int!

  """Type of actions to choose from."""
  type: String!

  """The options to choose from."""
  from: ActionChoiceOptionSet!

  """Description of the action choice."""
  desc: String
}

"""A set of action options to choose from"""
type ActionChoiceOptionSet {
  """The type of option set."""
  option_set_type: String!

  """The available options."""
  options: [ActionOptionUnion!]!
}

union ActionOptionUnion = ActionChoiceOption | MultipleActionChoiceOption

"""A single action option within a choice"""
type ActionChoiceOption {
  """The type of option."""
  option_type: String!

  """The name of the action."""
  action_name: String!

  """Number of times the action can be used."""
  count: Int!

  """The type of action."""
  type: String!

  """Additional notes about the action."""
  notes: String
}

"""A multiple action option containing a set of actions"""
type MultipleActionChoiceOption {
  """The type of option."""
  option_type: String!

  """The set of actions in this option."""
  items: [ActionChoiceOption!]!
}

"""A choice of breath options for a monster action"""
type BreathChoice {
  """Number of breath options to choose."""
  choose: Int!

  """Type of breath options to choose from."""
  type: String!

  """The options to choose from."""
  from: BreathChoiceOptionSet!

  """Description of the breath choice."""
  desc: String
}

"""A set of breath options to choose from"""
type BreathChoiceOptionSet {
  """The type of option set."""
  option_set_type: String!

  """The available breath options."""
  options: [BreathChoiceOption!]!
}

"""A single breath option within a breath choice"""
type BreathChoiceOption {
  """The type of option (e.g., breath)."""
  option_type: String!

  """The name of the breath option."""
  name: String!

  """The difficulty class for the breath."""
  dc: DifficultyClass!

  """The damage dealt by the breath."""
  damage: [Damage!]
}

"""Represents damage dealt by an ability, spell, or weapon."""
type Damage {
  """The type of damage."""
  damage_type: DamageType

  """The damage dice roll (e.g., 3d6)."""
  damage_dice: String!
}

"""Represents a type of damage (e.g., Acid, Bludgeoning, Fire)."""
type DamageType {
  """The unique identifier for this damage type (e.g., acid)."""
  index: String!

  """The name of the damage type (e.g., Acid)."""
  name: String!

  """A description of the damage type."""
  desc: [String!]!

  """Timestamp of the last update."""
  updated_at: String!
}

"""A state that can affect a creature, such as Blinded or Prone."""
type Condition {
  """The unique identifier for this condition (e.g., blinded)."""
  index: String!

  """The name of the condition (e.g., Blinded)."""
  name: String!

  """A description of the effects of the condition."""
  desc: [String!]!

  """Timestamp of the last update."""
  updated_at: String!
}

"""A legendary action a monster can perform"""
type LegendaryAction {
  """The name of the legendary action."""
  name: String!

  """The description of the legendary action."""
  desc: String!

  """The attack bonus for the legendary action."""
  attack_bonus: Int

  """The damage for the legendary action."""
  damage: [Damage!]

  """The difficulty class for the legendary action."""
  dc: DifficultyClass
}

"""A monster's specific proficiency and its bonus value."""
type MonsterProficiency {
  """The specific proficiency (e.g., Saving Throw: STR, Skill: Athletics)."""
  proficiency: Proficiency!

  """The proficiency bonus value for this monster."""
  value: Int!
}

"""A reaction a monster can perform"""
type Reaction {
  """The name of the reaction."""
  name: String!

  """The description of the reaction."""
  desc: String!

  """The difficulty class for the reaction."""
  dc: DifficultyClass
}

"""Represents a skill, tool, weapon, armor, or saving throw proficiency."""
type Proficiency {
  """Classes that grant this proficiency."""
  classes: [Class!]

  """Unique identifier for this proficiency."""
  index: String!

  """Name of the proficiency."""
  name: String!

  """Races that grant this proficiency."""
  races: [Race!]

  """Category of proficiency (e.g., Armor, Weapons, Saving Throws, Skills)."""
  type: String!

  """Timestamp of the last update."""
  updated_at: String!
  reference: ProficiencyReference
}

"""Represents a character class (e.g., Barbarian, Wizard)"""
type Class {
  """All levels for this class, detailing features and abilities gained."""
  class_levels: [Level!]!

  """Multi-classing requirements and features for this class."""
  multi_classing: MultiClassing

  """Hit die size for the class (e.g., 6, 8, 10, 12)"""
  hit_die: Int!

  """Unique identifier for the class"""
  index: String!

  """Name of the class"""
  name: String!

  """Base proficiencies granted by this class."""
  proficiencies: [Proficiency!]

  """Saving throw proficiencies granted by this class."""
  saving_throws: [AbilityScore!]

  """Spellcasting details for the class."""
  spellcasting: Spellcasting

  """Spells available to this class."""
  spells: [Spell!]!

  """Starting equipment for the class."""
  starting_equipment: [ClassEquipment!]

  """Available subclasses for this class."""
  subclasses: [Subclass!]

  """Timestamp of the last update"""
  updated_at: String!
  proficiency_choices: [ProficiencyChoice!]!

  """Resolves starting equipment choices for the class."""
  starting_equipment_options: [StartingEquipmentChoice!]
}

"""Represents the features and abilities gained at a specific class level"""
type Level {
  """Number of ability score bonuses gained at this level"""
  ability_score_bonuses: Int

  """The class this level belongs to."""
  class: Class

  """Class-specific details for this level."""
  class_specific: ClassSpecific

  """Features gained at this level."""
  features: [Feature!]

  """Unique identifier for this level (e.g., barbarian-1, rogue-20)"""
  index: String!

  """The class level (1-20)"""
  level: Int!

  """Proficiency bonus gained at this level"""
  prof_bonus: Int

  """Spellcasting progression details for this level."""
  spellcasting: LevelSpellcasting

  """The subclass this level relates to, if applicable."""
  subclass: Subclass

  """Subclass-specific details for this level."""
  subclass_specific: SubclassSpecific

  """Timestamp of the last update"""
  updated_at: String!
}

"""Class-specific features and values gained at a level"""
type ClassSpecific {
  """Number of Action Surges available."""
  action_surges: Int

  """Maximum spell level recoverable via Arcane Recovery."""
  arcane_recovery_levels: Int

  """Range of Paladin auras in feet."""
  aura_range: Int

  """Die size for Bardic Inspiration (e.g., 6 for d6)."""
  bardic_inspiration_die: Int

  """Number of extra damage dice for Barbarian's Brutal Critical."""
  brutal_critical_dice: Int

  """Number of uses for Channel Divinity."""
  channel_divinity_charges: Int

  """Sorcerer spell slot creation options."""
  creating_spell_slots: [ClassSpecificCreatingSpellSlot!]

  """
  Maximum Challenge Rating of undead that can be destroyed by Channel Divinity.
  """
  destroy_undead_cr: Float

  """Number of extra attacks granted."""
  extra_attacks: Int

  """Number of favored enemies known by Ranger."""
  favored_enemies: Int

  """Number of favored terrains known by Ranger."""
  favored_terrain: Int

  """Number of uses for Fighter's Indomitable feature."""
  indomitable_uses: Int

  """Number of Warlock invocations known."""
  invocations_known: Int

  """Number of Monk ki points."""
  ki_points: Int

  """
  Maximum level of spells gained via Bard's Magical Secrets (up to level 5).
  """
  magical_secrets_max_5: Int

  """
  Maximum level of spells gained via Bard's Magical Secrets (up to level 7).
  """
  magical_secrets_max_7: Int

  """
  Maximum level of spells gained via Bard's Magical Secrets (up to level 9).
  """
  magical_secrets_max_9: Int

  """Monk martial arts damage progression."""
  martial_arts: ClassSpecificMartialArt

  """Number of Sorcerer metamagic options known."""
  metamagic_known: Int

  """Indicates if Warlock gained level 6 Mystic Arcanum (1 = yes)."""
  mystic_arcanum_level_6: Int

  """Indicates if Warlock gained level 7 Mystic Arcanum (1 = yes)."""
  mystic_arcanum_level_7: Int

  """Indicates if Warlock gained level 8 Mystic Arcanum (1 = yes)."""
  mystic_arcanum_level_8: Int

  """Indicates if Warlock gained level 9 Mystic Arcanum (1 = yes)."""
  mystic_arcanum_level_9: Int

  """Number of Barbarian rages per long rest."""
  rage_count: Int

  """Damage bonus added to Barbarian rage attacks."""
  rage_damage_bonus: Int

  """Rogue sneak attack damage progression."""
  sneak_attack: ClassSpecificSneakAttack

  """Die size for Bard's Song of Rest (e.g., 6 for d6)."""
  song_of_rest_die: Int

  """Number of Sorcerer sorcery points."""
  sorcery_points: Int

  """Bonus speed for Monk's Unarmored Movement in feet."""
  unarmored_movement: Int

  """Indicates if Druid's Wild Shape allows flying."""
  wild_shape_fly: Boolean

  """Maximum Challenge Rating for Druid's Wild Shape form."""
  wild_shape_max_cr: Float

  """Indicates if Druid's Wild Shape allows swimming."""
  wild_shape_swim: Boolean
}

"""Spell slot creation details for Sorcerer levels"""
type ClassSpecificCreatingSpellSlot {
  """Cost in sorcery points."""
  sorcery_point_cost: Int!

  """Level of the spell slot created."""
  spell_slot_level: Int!
}

"""Martial arts details for Monk levels"""
type ClassSpecificMartialArt {
  """Number of dice for martial arts damage."""
  dice_count: Int!

  """Value of the dice used (e.g., 4 for d4)."""
  dice_value: Int!
}

"""Sneak attack details for Rogue levels"""
type ClassSpecificSneakAttack {
  """Number of dice for sneak attack damage."""
  dice_count: Int!

  """Value of the dice used (e.g., 6 for d6)."""
  dice_value: Int!
}

"""Represents a class or subclass feature."""
type Feature {
  """The class that gains this feature."""
  class: Class

  """Description of the feature."""
  desc: [String!]!

  """A parent feature, if applicable."""
  parent: Feature

  """Unique identifier for this feature."""
  index: String!

  """Level at which the feature is gained."""
  level: Int!

  """Name of the feature."""
  name: String!

  """Reference information (e.g., book and page number)."""
  reference: String

  """The subclass that gains this feature, if applicable."""
  subclass: Subclass

  """Specific details for this feature, if applicable."""
  feature_specific: FeatureSpecific

  """Timestamp of the last update."""
  updated_at: String!

  """
  Resolves the prerequisites array, fetching referenced Features or Spells.
  """
  prerequisites: [FeaturePrerequisiteUnion!]
}

"""
Represents a subclass (e.g., Path of the Berserker, School of Evocation)
"""
type Subclass {
  """The parent class for this subclass."""
  class: Class

  """Description of the subclass"""
  desc: [String!]!

  """Unique identifier for the subclass"""
  index: String!

  """Name of the subclass"""
  name: String!

  """Spells specific to this subclass."""
  spells: [SubclassSpell!]

  """Flavor text describing the subclass"""
  subclass_flavor: String!

  """Features and abilities gained by level for this subclass."""
  subclass_levels: [Level!]

  """Timestamp of the last update"""
  updated_at: String!
}

"""Spell gained by a subclass"""
type SubclassSpell {
  """The spell gained."""
  spell: Spell!

  """Resolves the prerequisites to actual Level or Feature objects."""
  prerequisites: [SubclassSpellPrerequisite!]
}

"""Represents a spell in D&D"""
type Spell {
  """Area of effect details, if applicable."""
  area_of_effect: AreaOfEffect

  """Type of attack associated with the spell (e.g., Melee, Ranged)"""
  attack_type: String

  """Time required to cast the spell"""
  casting_time: String!

  """Classes that can cast this spell."""
  classes: [Class!]

  """Components required for the spell (V, S, M)"""
  components: [String!]!

  """Indicates if the spell requires concentration"""
  concentration: Boolean!

  """Damage details, if applicable."""
  damage: SpellDamage

  """Saving throw details, if applicable."""
  dc: SpellDC

  """Description of the spell's effects"""
  desc: [String!]!

  """Duration of the spell"""
  duration: String!

  """Description of effects when cast at higher levels"""
  higher_level: [String!]

  """Unique identifier for this spell"""
  index: String!

  """Level of the spell (0 for cantrips)"""
  level: Int!

  """Material components required, if any"""
  material: String

  """Name of the spell"""
  name: String!

  """Range of the spell"""
  range: String!

  """Indicates if the spell can be cast as a ritual"""
  ritual: Boolean!

  """The school of magic this spell belongs to."""
  school: MagicSchool

  """Subclasses that can cast this spell."""
  subclasses: [Subclass!]

  """Timestamp of the last update"""
  updated_at: String!

  """Healing amount based on spell slot level, transformed from raw data."""
  heal_at_slot_level: [LevelValue!]
}

"""Defines an area of effect for spells or abilities."""
type AreaOfEffect {
  """The size of the area of effect (e.g., radius in feet)."""
  size: Int!

  """The shape of the area of effect."""
  type: String!
}

"""Details about spell damage"""
type SpellDamage {
  """Type of damage dealt."""
  damage_type: DamageType
  damage_at_slot_level: [LevelValue!]!

  """Damage scaling based on character level, transformed from raw data."""
  damage_at_character_level: [LevelValue!]
}

"""A key-value pair representing a value at a specific level."""
type LevelValue {
  """The level."""
  level: Int!

  """The value associated with the level."""
  value: String!
}

"""Details about a spell's saving throw"""
type SpellDC {
  """The ability score used for the saving throw."""
  dc_type: AbilityScore!

  """The result of a successful save (e.g., 'half', 'none')."""
  dc_success: String!

  """Additional description for the saving throw."""
  desc: String
}

"""
A school of magic, representing a particular tradition like Evocation or Illusion.
"""
type MagicSchool {
  """A brief description of the school of magic."""
  desc: String!

  """The unique identifier for this school (e.g., evocation)."""
  index: String!

  """The name of the school (e.g., Evocation)."""
  name: String!

  """Timestamp of the last update."""
  updated_at: String!
}

union SubclassSpellPrerequisite = Level | Feature

"""Specific details related to a feature"""
type FeatureSpecific {
  """Invocations related to this feature."""
  invocations: [Feature!]
}

union FeaturePrerequisiteUnion = LevelPrerequisite | FeaturePrerequisite | SpellPrerequisite

"""Prerequisite based on character level"""
type LevelPrerequisite {
  """Type indicator for this prerequisite."""
  type: String!

  """The character level required."""
  level: Int!
}

"""Prerequisite based on having another feature"""
type FeaturePrerequisite {
  """Type indicator for this prerequisite."""
  type: String!

  """The specific feature required."""
  feature: Feature!
}

"""Prerequisite based on knowing a specific spell"""
type SpellPrerequisite {
  """Type indicator for this prerequisite."""
  type: String!

  """The specific spell required."""
  spell: Spell!
}

"""Spellcasting details for a class at a specific level"""
type LevelSpellcasting {
  """Number of cantrips known."""
  cantrips_known: Int

  """Number of level 1 spell slots."""
  spell_slots_level_1: Int!

  """Number of level 2 spell slots."""
  spell_slots_level_2: Int!

  """Number of level 3 spell slots."""
  spell_slots_level_3: Int!

  """Number of level 4 spell slots."""
  spell_slots_level_4: Int!

  """Number of level 5 spell slots."""
  spell_slots_level_5: Int!

  """Number of level 6 spell slots."""
  spell_slots_level_6: Int

  """Number of level 7 spell slots."""
  spell_slots_level_7: Int

  """Number of level 8 spell slots."""
  spell_slots_level_8: Int

  """Number of level 9 spell slots."""
  spell_slots_level_9: Int

  """Total number of spells known (for certain classes like Sorcerer)."""
  spells_known: Int
}