import re
import requests
import json
import psycopg2
import pandas as pd
import io
import openpyxl

def get_urls():
    url = "https://www.dnd5eapi.co/api/2014/monsters"
    headers = {
        "Accept": "application/json"
    }

    response = requests.get(url, headers=headers)
    if response.status_code == 200:
        monster_urls = []
        monsters_url_json = response.json()
        for monster in monsters_url_json["results"]:
            monster_urls.append("https://www.dnd5eapi.co" + monster["url"])
        return monster_urls
            
    else:
        print(f"Error: {response.status_code}")

def get_fields():
    monster_urls = get_urls()
    headers = {
        "Accept": "application/json"
    }

    monster_fields_set = set()
    for url in monster_urls:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            monster_fields_set = (monster_fields_set | set(pd.json_normalize(response.json()).columns))
        
        else:
            print(f"Error in get_fields get request: {response.status_code}")
            break
        
    
    monster_fields_list = list(monster_fields_set)
    special_abilities = ["special_abilities"]
    actions = ["actions"]
    legendary_actions = ["legendary_actions"]

    if special_abilities[0] in monster_fields_list:
        monster_fields_list.remove(special_abilities[0])
    if actions[0] in monster_fields_list:
        monster_fields_list.remove(actions[0])
    if legendary_actions[0] in monster_fields_list:
        monster_fields_list.remove(legendary_actions[0])
    
    monsters = monster_fields_list.copy()

    return monsters, special_abilities, actions, legendary_actions

def get_data():
    monster_urls = get_urls()
    headers = {
        "Accept": "application/json"
    }
    monster_fields, special_abilities, actions, legendary_actions = get_fields()

    monster_df = pd.DataFrame(columns=monster_fields + special_abilities + actions + legendary_actions)
    
    for url in monster_urls:
        response = requests.get(url, headers=headers)
        if response.status_code == 200:
            monster_df = pd.concat([monster_df, pd.json_normalize(response.json())], copy=False)
        
        else:
            print(f"Error in get_data get request: {response.status_code}")
            break

    monster_df.to_excel("monsters.xlsx")
    
def main():
    get_data()

if __name__ == "__main__":
    main()